{"version":3,"sources":["Components/Button.js","Components/ContactForm.js","Components/Contacts.js","Components/Filter.js","Components/Notification.js","Services/contacts.js","App.js","index.js"],"names":["Button","props","onClick","handleClick","text","ContactForm","newName","handleNameChange","newNumber","handleNumberChange","addPerson","type","value","onChange","Contacts","filteredContacts","deleteContact","map","contact","name","number","id","Filter","query","handleSearchChange","Notification","message","className","baseUrl","a","axios","get","request","data","console","log","newContact","post","put","delete","getAll","create","update","App","useState","persons","setPersons","contactFilter","setNewContactFilter","setNewName","setNewNumber","newSearch","setNewSearch","setMessage","event","preventDefault","newPerson","person","searchPeople","window","confirm","contactsService","concat","useEffect","contacts","getContacts","length","setTimeout","indexOf","keyword","target","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c4dcfe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = (props) => (\r\n  <button onClick={props.handleClick}>\r\n    {props.text}\r\n  </button>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from \"./Button\";\r\n\r\nconst ContactForm = ({newName, handleNameChange, newNumber, handleNumberChange, addPerson}) => {  \r\n      return (\r\n      <form>\r\n        <div>\r\n          Name: <input type=\"text\" value={newName} onChange={handleNameChange} />\r\n          Number: <input type=\"text\" value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n        <Button text=\"Add\" handleClick={addPerson}/>\r\n        </div>\r\n      </form>\r\n      )\r\n  }\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport Button from \"./Button\";\r\n\r\nconst Contacts = ({filteredContacts, deleteContact}) => {\r\n      return filteredContacts.map(contact => \r\n        (\r\n          <p key={contact.id}>{contact.name} {contact.number} <Button text=\"Delete\" handleClick={() => deleteContact(contact.name, contact.id)}/> </p>\r\n        ))\r\n    }\r\nexport default Contacts;","import React from 'react';\r\n\r\nconst Filter = ({query, handleSearchChange}) => {  \r\n    return (\r\n            <div>\r\n                Filter shown with: <input type=\"text\" value={query} onChange={handleSearchChange} />\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className= {message.type} >\r\n        {message.text}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nasync function getAll () {\r\n    try {\r\n      const request = await axios.get(baseUrl);\r\n      return request.data;\r\n    } catch (error) {\r\n      console.log(`Failed to get all contacts. Error: ${error}`)\r\n    }\r\n  }\r\n  \r\n  async function create (newContact)  {\r\n    try {\r\n        const request =  await axios.post(baseUrl, newContact);\r\n        return request.data;\r\n    } catch (error) {\r\n        console.log(`Failed to create contact. Error: ${error}`)\r\n    }\r\n  }\r\n  \r\n  async function update (id, newContact) {\r\n    try {\r\n        const request = await axios.put(`${baseUrl}/${id}`, newContact);\r\n        return request.data;\r\n    } catch (error) {\r\n        console.log(`Failed to update contact. Error: ${error}`)\r\n    }\r\n  }\r\n\r\n  async function deleteContact (id) {\r\n      try {\r\n          const request = await axios.delete(`${baseUrl}/${id}`);\r\n          return request.data\r\n      } catch (error) {\r\n         console.log(`Failed to delete contact. Error: ${error}`)\r\n      }\r\n  }\r\n  \r\n  export default { getAll, create, update, deleteContact }","import React, { useState, useEffect  } from 'react'\r\nimport ContactForm from \"./Components/ContactForm\";\r\nimport Contacts from \"./Components/Contacts\";\r\nimport Filter from \"./Components/Filter\";\r\nimport Notification from \"./Components/Notification\";\r\nimport contactsService from './Services/contacts'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ contactFilter, setNewContactFilter ] = useState(persons)\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newSearch, setNewSearch ] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n  \r\n    async function getContacts() {\r\n      try {\r\n        const contacts = await contactsService.getAll();\r\n        setPersons(contacts);\r\n        setNewContactFilter(contacts);\r\n      } catch (error) {\r\n        console.log(`Failed to fetch contacts. Error: ${error}`)\r\n      }\r\n    }\r\n\r\n    getContacts();\r\n  },[persons.length])\r\n\r\n  \r\n  useEffect(() => {\r\n    setTimeout(() => {setMessage(null)}, 5000)\r\n  },[message !== null])\r\n\r\n  async function addPerson (event) {\r\n    try {\r\n      event.preventDefault();\r\n      const newPerson = {\r\n        name : newName,\r\n        number: newNumber\r\n      }\r\n      const person = searchPeople(newName);\r\n      if (person !== -1) {\r\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n          setPersons(persons.concat(await contactsService.update(persons[person].id, newPerson)));\r\n        }\r\n      } else {\r\n        setPersons(persons.concat(await contactsService.create(newPerson)));\r\n      }\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setMessage({text: `Added ${newName}`, type: 'notification'}) \r\n    } catch (error) {\r\n      setMessage({text: `Failed to add \"${newName}\" as a contact.`, type: 'error'}) \r\n    }\r\n  }\r\n\r\n  async function deletePerson (name, id) {\r\n    try {\r\n        if (window.confirm(`Delete ${name}?`)) {\r\n          setPersons(persons.concat(await contactsService.deleteContact(id)))\r\n          setMessage({text: `Deleted ${name}`, type: 'notification'})     \r\n        }\r\n    } catch (error) {\r\n      setMessage({text: `Contact: \"${name}\" was already removed from server`, type: 'error'}) \r\n    }\r\n  }\r\n\r\n  const handleNameChange=(event)=>{\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange=(event)=>{\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchChange=(event)=>{\r\n       const keyword = event.target.value\r\n       setNewSearch(keyword)\r\n       const filter = !keyword.length ? persons: persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()));\r\n       setNewContactFilter(filter);\r\n  }\r\n\r\n  const searchPeople = (name) => {\r\n      return persons.map(person => person.name).indexOf(name);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n        <Notification message={message} />\r\n        <Filter query={newSearch} handleSearchChange={handleSearchChange} />\r\n        <div>\r\n          <h3>Add New Contact</h3>\r\n          <ContactForm newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} addPerson={addPerson} />\r\n        </div>\r\n      <h3>Numbers</h3>\r\n      <Contacts filteredContacts={contactFilter} deleteContact={deletePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}